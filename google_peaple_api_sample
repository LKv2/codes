from __future__ import print_function
import os.path, openpyxl
from google.auth.transport.requests import Request
from google.oauth2.credentials import Credentials
from googleapiclient.discovery import build
from google_auth_oauthlib.flow import InstalledAppFlow
from googleapiclient.errors import HttpError

# If modifying these SCOPES, delete the file token.json.
SCOPES = ['https://www.googleapis.com/auth/contacts']

def main():
    """Shows basic usage of the People API.
    Prints the name of the first 10 connections.
    """
    creds = None
    # The file token.json stores the user's access and refresh tokens, and is
    # created automatically when the authorization flow completes for the first
    # time.
    if os.path.exists('token.json'):
        creds = Credentials.from_authorized_user_file('token.json', SCOPES)
    # If there are no (valid) credentials available, let the user log in.
    if not creds or not creds.valid:
        if creds and creds.expired and creds.refresh_token:
            creds.refresh(Request())
        else:
            flow = InstalledAppFlow.from_client_secrets_file('credentials.json', SCOPES)
            creds = flow.run_local_server(port=0)
        # Save the credentials for the next run
        with open('token.json', 'w') as token:
            token.write(creds.to_json())
    return creds

def read_excel(file_path):
    wb = openpyxl.load_workbook(file_path)
    sheet = wb.active
    data = []
    for row in sheet.iter_rows():
        row_data = []
        for cell in row:
            row_data.append(cell.value)
        data
        data.append(row_data)
    return data

def add_contacts(service, data):
    for i in range(1, len(data)):
        name = data[i][1]
        phone = data[i][0]
        contact = {
            'names': [{
                'givenName': name
            }],
            'phoneNumbers': [{
                'value': phone
            }]
        }
        try:
            service.people().createContact(body=contact).execute()
            print(f'Contact {name} ajouté avec succès')
        except HttpError as error:
            print(f"Erreur lors de l'ajout de {name}: {error}")

if __name__ == '__main__':
    try:
        creds = main()
        service = build('people', 'v1', credentials=creds)
        contacts = read_excel('contact.xlsx')
        add_contacts(service, contacts)
    except HttpError as err:
        print(err)
